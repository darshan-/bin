#!/usr/bin/ruby
# coding: utf-8

# Leaves out Chrome's license file.

require 'nokogiri'
require 'open-uri'
require 'tmpdir'

channels = {'stable' => 'Stable%20updates',
            'beta' => 'Beta%20updates',
            'dev' => 'Dev%20updates'}

usage = "Usage: #{$0} [#{channels.keys.join('|')}]"
channel = ''

if ARGV.length > 1
  abort usage
end

if ARGV.length == 1
  if channels.keys.member? ARGV.first
    channel = ARGV.first
  else
    abort usage
  end
else
  channel = 'stable'
end

cmd_channel = channel == 'dev' ? 'unstable' : channel

# PKGBUILD sometimes wants channel and sometimes doesn't
install_channel = channel == 'stable' ? '' : "-#{cmd_channel}"

versions = []

url = "http://googlechromereleases.blogspot.com/search/label/#{channels[channel]}"

doc = Nokogiri::HTML(open(url).read)

doc.xpath('//a').each do |a|
  if a.text == "#{channel.capitalize} Channel Update"
    a.parent.parent.parent.css('div.entry-content').each do |entry|
      entry.text.scan(/\d+\.\d+\.\d+\.\d+/).each do |version|
        versions << version
      end
    end
  end
end

latest = versions.sort.last

if latest == nil
  abort "Could not determine latest version"
end

current = `google-chrome-#{cmd_channel} --version`.match(/\d+\.\d+\.\d+\.\d+/)[0] rescue current = '0'

if (latest == current)
  puts "#{channel.capitalize} channel is already up to date at version #{latest}"
  exit
end

puts "Upgrading #{channel} channel to version #{latest}"

install = %q[
# Colored makepkg-like functions
msg_blue() {
    printf "${blue}==>${bold} $1${all_off}\n"
}

note() {
    printf "${blue}==>${yellow} NOTE:${bold} $1${all_off}\n"
}

all_off="$(tput sgr0)"
bold="${all_off}$(tput bold)"
blue="${bold}$(tput setaf 4)"
yellow="${bold}$(tput setaf 3)"

_update() {
    msg_blue "Updating desktop MIME database..."
    update-desktop-database -q
    msg_blue "Updating icon cache.."
    xdg-icon-resource forceupdate --theme hicolor &>/dev/null
}

post_install() {
    _update
    note "The binary is called: 'google-chrome-beta'"
}


post_upgrade() {
    post_install
}


post_remove() {
    _update
}
]

pkgbuild = %Q[
# Maintainer: Det <nimetonmaili g-mail>
# Contributors: t3ddy, Lex Rivera aka x-demon, ruario

# Check for new Linux releases in: http://googlechromereleases.blogspot.com/search/label/Beta%20updates
# or use: $ curl -s https://dl.google.com/linux/chrome/rpm/stable/x86_64/repodata/other.xml.gz | gzip -df | awk -F\" '/pkgid/{ sub(".*-","",$4); print $4": "$10 }'

pkgname=google-chrome#{install_channel}
pkgver=#{latest}
pkgrel=1
pkgdesc="An attempt at creating a safer, faster, and more stable browser (#{channel.capitalize} Channel)"
arch=('x86_64')
url="https://www.google.com/chrome/index.html"
license=('custom:chrome')
depends=('alsa-lib' 'desktop-file-utils' 'flac' 'gconf' 'gtk2' 'harfbuzz' 'harfbuzz-icu' 'hicolor-icon-theme'
         'icu' 'libpng' 'libxss' 'libxtst' 'nss' 'opus' 'snappy' 'speech-dispatcher' 'ttf-font' 'xdg-utils')
optdepends=('kdebase-kdialog: needed for file dialogs in KDE'
            'ttf-liberation: fix fonts for some PDFs')
makedepends=('pacman>=4.2.0')
provides=('google-chrome' 'pepper-flash')
options=('!emptydirs' '!strip')
#install=$pkgname.install
install=install
_channel=#{cmd_channel}
#source=('eula_text.html')
source_x86_64=("google-chrome-${_channel}_${pkgver}_amd64.deb::https://dl.google.com/linux/direct/google-chrome-${_channel}_current_amd64.deb")
md5sums=('b7e752f549b215ac77f284b6486794b6')
md5sums_i686=('f4529106a32ef2e8d0d046e176788385')
md5sums_x86_64=('1b0ae60b0cc93388c8f955275944272b')

package() {
  msg2 "Extracting the data.tar.xz..."
  bsdtar -xf data.tar.xz -C "$pkgdir/"

  msg2 "Moving stuff in place..."
  # Icons
  for i in 16x16 22x22 24x24 32x32 48x48 64x64 128x128 256x256; do
    install -Dm644 "$pkgdir"/opt/google/chrome#{install_channel}/product_logo_${i/x*}.png \
                   "$pkgdir"/usr/share/icons/hicolor/$i/apps/google-chrome-$_channel.png
  done

  # Man page
  gzip "$pkgdir"/usr/share/man/man1/google-chrome#{install_channel}.1

  # License
  #install -Dm644 eula_text.html "$pkgdir"/usr/share/licenses/google-chrome-$_channel/eula_text.html

  msg2 "Fixing Chrome icon resolution..."
  sed -i "/Exec=/i\StartupWMClass=Google-chrome-$_channel" "$pkgdir"/usr/share/applications/google-chrome#{install_channel}.desktop

  msg2 "Adding support for CHROMIUM_USER_FLAGS..."
  sed -i 's/ "$@"/ $CHROMIUM_USER_FLAGS "$@"/' "$pkgdir"/opt/google/chrome#{install_channel}/google-chrome#{install_channel}

  msg2 "Removing unnecessities (e.g. Debian Cron job)..."
  rm -r "$pkgdir"/etc/cron.daily/ "$pkgdir"/opt/google/chrome#{install_channel}/cron/
  rm "$pkgdir"/opt/google/chrome#{install_channel}/product_logo_*.png
}
]

Dir.mktmpdir() do |tmpdir|
  IO.write("#{tmpdir}/PKGBUILD", pkgbuild)
  #IO.write("#{tmpdir}/google-chrome-#{channel}.install", install)
  IO.write("#{tmpdir}/install", install)
  `cd #{tmpdir}; makepkg -si --skipinteg`
end

current = `google-chrome-#{cmd_channel} --version`.match(/\d+\.\d+\.\d+\.\d+/)[0]

if (latest == current)
  puts "Upgraded #{channel} channel to version #{latest}"
else
  puts "Upgrade failed!"
end
